{"version":3,"sources":["dom.js","main.js"],"names":["text","document","createTextNode","node","tag","attrs","children","el","createElement","Object","keys","forEach","name","setAttribute","Array","isArray","appendChild","find","selector","parent","body","querySelector","findAll","querySelectorAll","prepend","target","insertAdjacentElement","append","onEvent","eventName","cb","addEventListener","removeEventListener","onClick","onChange","getValue","link","title","JSON","stringify","createSnippet","linkInput","dom","type","value","titleInput","hiddenInput","removeButton","class","item","update","listeners","remove","l","box","list","form","button","snippet","window","__postRecommendations","data","parse"],"mappings":"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","file":"main.js","sourceRoot":"src","sourcesContent":["export function text(text) {\r\n  return document.createTextNode(text);\r\n}\r\nexport function node(tag, attrs, children = []) {\r\n  const el = document.createElement(tag);\r\n  if (attrs) {\r\n    Object.keys(attrs).forEach((name) => {\r\n      el.setAttribute(name, attrs[name]);\r\n    });\r\n  }\r\n  if (children) {\r\n    if (!Array.isArray(children)) {\r\n      children = [children];\r\n    }\r\n    children.forEach((node) => {\r\n      el.appendChild(node);\r\n    });\r\n  }\r\n  return el;\r\n}\r\nexport function find(selector, parent = document.body) {\r\n  return parent.querySelector(selector);\r\n}\r\nexport function findAll(selector, parent = document.body) {\r\n  return parent.querySelectorAll(selector);\r\n}\r\nexport function prepend(node, target = document.body) {\r\n  if (typeof node === 'string') node = text(node);\r\n  target.insertAdjacentElement('afterbegin', node);\r\n}\r\nexport function append(node, target = document.body) {\r\n  if (typeof node === 'string') node = text(node);\r\n  target.insertAdjacentElement('beforeend', node);\r\n}\r\nexport function onEvent(eventName, el, cb) {\r\n  el.addEventListener(eventName, cb);\r\n  return () => {\r\n    el.removeEventListener(eventName, cb);\r\n  };\r\n}\r\nexport function onClick(el, cb) {\r\n  return onEvent('click', el, cb);\r\n}\r\nexport function onChange(el, cb) {\r\n  return onEvent('change', el, cb);\r\n}\r\n","import * as dom from './dom.js';\r\n\r\nfunction getValue(link, title) {\r\n  return JSON.stringify({ link, title });\r\n}\r\n\r\nfunction createSnippet(link, title) {\r\n  const linkInput = dom.node('input', {\r\n    type: 'text',\r\n    value: link,\r\n  });\r\n  const titleInput = dom.node('input', {\r\n    type: 'text',\r\n    value: title,\r\n  });\r\n  const hiddenInput = dom.node('input', {\r\n    type: 'hidden',\r\n    name: 'recommendations[]',\r\n    value: getValue(link, title),\r\n  });\r\n  const removeButton = dom.node(\r\n    'button',\r\n    { type: 'button', class: 'button' },\r\n    dom.text('Удалить'),\r\n  );\r\n\r\n  const item = dom.node('div', { class: 'recommendations-group' }, [\r\n    dom.node('div', { class: 'recommendations-field' }, linkInput),\r\n    dom.node('div', { class: 'recommendations-field' }, titleInput),\r\n    dom.node(\r\n      'div',\r\n      { class: 'recommendations-field' },\r\n      removeButton,\r\n    ),\r\n    hiddenInput,\r\n  ]);\r\n\r\n  function update() {\r\n    hiddenInput.value = getValue(linkInput.value, titleInput.value);\r\n  }\r\n\r\n  const listeners = [\r\n    dom.onChange(linkInput, update),\r\n    dom.onChange(titleInput, update),\r\n    dom.onClick(removeButton, remove),\r\n  ];\r\n\r\n  function remove() {\r\n    listeners.forEach((l) => l());\r\n    item.remove();\r\n  }\r\n\r\n  return item;\r\n}\r\n\r\n(function () {\r\n  const box = dom.find('#recommendations-box');\r\n  const list = dom.find('#recommendations-list', box);\r\n\r\n  const form = dom.find('#recommendations-form', box);\r\n  const link = dom.find('#recommendation-link-add', form);\r\n  const title = dom.find('#recommendation-title-add', form);\r\n  const button = dom.find('#recommendation-add', form);\r\n\r\n  dom.onClick(button, () => {\r\n    if (!link.value) return;\r\n\r\n    const snippet = createSnippet(link.value, title.value);\r\n    dom.append(snippet, list);\r\n    link.value = '';\r\n    title.value = '';\r\n  });\r\n\r\n  (window.__postRecommendations || []).forEach((data) => {\r\n    const { link, title } = JSON.parse(data);\r\n    const snippet = createSnippet(link, title);\r\n    list.append(snippet);\r\n  });\r\n})();\r\n"]}